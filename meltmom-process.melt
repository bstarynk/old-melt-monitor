;;;  file meltmom-process.melt -*- Lisp -*-

;;;   Copyright (C)  2014 Free Software Foundation, Inc.
;;; MONIMELT is a monitor for MELT - see http://gcc-melt.org/
;;; This file is part of GCC.
;;;
;;; GCC is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 3, or (at your option)
;;; any later version.
;;;
;;; GCC is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;; You should have received a copy of the GNU General Public License
;;; along with GCC; see the file COPYING3.   If not see
;;; <http://www.gnu.org/licenses/>.

;;; this file is for the MELT 1.1 (or later) plugin for GCC
;;; to process the header file monimelt.h
;;; see http://gcc-melt.org/ for more

(module_is_gpl_compatible "GPLv3+")


(defun monimelt_finish_decl (decl)
  (let ( (tdecl  (unbox :tree decl))
	 )
    (match
     tdecl
     (?(tree_function_decl_named
	?(and ?tfuname ?(cstring_prefixed "mom_"))
	?tfunres)
       (let ( (tfuntype (tree_type tdecl))
	      )
	 (debug "monimelt_finish_decl found mom_ function " tdecl ";\n.. tfuname=" tfuname
		"; tfunres=" tfunres "; tfuntype=" tfuntype "\n")
	 (inform_at decl "good Monimelt function $1" tfuname)
	 )
       )
     (?(tree_type_declaration
	;; caveat, many types start with mom without underscore
	?(and ?(tree_identifier ?(cstring_prefixed "mom")) ?tyname))
       (debug "monimelt_finish_decl typedecl tyname=" tyname ";\n.. tdecl=" tdecl)
       (inform_at decl "good Monimelt type $1" tyname)
       )
     (?_
      ())
     )
    )
  )

(defun processmonimelt_docmd (cmd moduldata)
  (debug "processmonimelt_docmd start " cmd)
  (register_finish_decl_first  monimelt_finish_decl)
  (debug "processmonimelt_docmd end " cmd)
  (inform_at () "done MELT processing of monimelt.h")
  ;; at last
  (return :true)
)

(definstance process_monimelt_header_mode
  class_melt_mode
  :named_name '"process_monimelt_header"
  :meltmode_help '"process the monimelt.h header file and send some information about it to monimelt using JSONRPC"
  :meltmode_fun processmonimelt_docmd
)
(install_melt_mode process_monimelt_header_mode)
;; eof meltmom-process.melt 
